{"ast":null,"code":"var _jsxFileName = \"/Users/pavloveone/Desktop/projects/posts/src/components/about-user/about-user.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { Button, Container, ListGroup, ListGroupItem, Nav } from 'react-bootstrap';\nimport { apiUrl } from '../../utils/variables';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport { Post } from '../post/post';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getUser } from '../../services/actions/user';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AboutUser = () => {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    user\n  } = useSelector(state => state.user);\n  const [userPosts, setUserPosts] = useState([]);\n  const [isVisible, setIsVisible] = useState(false);\n  const {\n    userId\n  } = useParams();\n  useEffect(() => {\n    dispatch(getUser(userId));\n  }, [dispatch, userId]);\n  const getPosts = userId => {\n    !!user && axios.get(`${apiUrl}/users/${userId}/posts`).then(resp => {\n      const postsData = resp.data;\n      setUserPosts(postsData);\n    });\n    setIsVisible(!isVisible);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: user && /*#__PURE__*/_jsxDEV(ListGroup, {\n      className: \"my-2\",\n      children: [/*#__PURE__*/_jsxDEV(Nav, {\n        className: \"mr-auto\",\n        children: /*#__PURE__*/_jsxDEV(Nav.Link, {\n          href: \"/posts\",\n          style: {\n            width: '20%'\n          },\n          variant: \"secondary\",\n          children: \"\\u041D\\u0430\\u0437\\u0430\\u0434\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(ListGroupItem, {\n        variant: \"primary\",\n        children: [\"\\u0418\\u043C\\u044F: \", user.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(ListGroupItem, {\n        children: [\"\\u041D\\u0438\\u043A: \", user.username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(ListGroupItem, {\n        children: [\"email: \", user.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(ListGroupItem, {\n        children: [\"\\u0410\\u0434\\u0440\\u0435\\u0441: \\u0433. \", user.address.city, \", \\u0443\\u043B. \", user.address.street, \", \\u043A\\u0432.\", user.address.suite, \", \\u0438\\u043D\\u0434\\u0435\\u043A\\u0441: \", user.address.zipcode]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(ListGroupItem, {\n        children: [\"\\u041D\\u043E\\u043C\\u0435\\u0440 \\u0442\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D\\u0430: \", user.phone]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(ListGroupItem, {\n        children: [\"\\u0412\\u0435\\u0431\\u0441\\u0430\\u0439\\u0442: \", user.website]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(ListGroupItem, {\n        children: [\"\\u041A\\u043E\\u043C\\u043F\\u0430\\u043D\\u0438\\u044F: \", user.company.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => getPosts(userId),\n        className: \"mt-2\",\n        style: {\n          width: '40%'\n        },\n        variant: \"primary\",\n        children: !isVisible ? 'Все посты пользователя' : 'Скрыть все посты пользователя'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this), userPosts.length > 0 && isVisible && userPosts.map(post => /*#__PURE__*/_jsxDEV(Post, {\n        post: post\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 25\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n_s(AboutUser, \"ai+QpLLS6fysEARD+1qYkqBp5ww=\", false, function () {\n  return [useDispatch, useSelector, useParams];\n});\n_c = AboutUser;\nvar _c;\n$RefreshReg$(_c, \"AboutUser\");","map":{"version":3,"names":["useState","useEffect","Button","Container","ListGroup","ListGroupItem","Nav","apiUrl","axios","useParams","Post","useDispatch","useSelector","getUser","jsxDEV","_jsxDEV","AboutUser","_s","dispatch","user","state","userPosts","setUserPosts","isVisible","setIsVisible","userId","getPosts","get","then","resp","postsData","data","children","className","Link","href","style","width","variant","fileName","_jsxFileName","lineNumber","columnNumber","name","username","email","address","city","street","suite","zipcode","phone","website","company","onClick","length","map","post","id","_c","$RefreshReg$"],"sources":["/Users/pavloveone/Desktop/projects/posts/src/components/about-user/about-user.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport {  Button, Container, ListGroup, ListGroupItem, Nav } from 'react-bootstrap';\nimport { apiUrl } from '../../utils/variables';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport { Post } from '../post/post';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getUser } from '../../services/actions/user';\n\n\nexport const AboutUser = () => {\n\n    const dispatch = useDispatch();\n    const { user } = useSelector(state => state.user)\n\n    const [userPosts, setUserPosts] = useState([])\n    const [isVisible, setIsVisible] = useState(false);\n    const { userId } = useParams();\n\n    useEffect(() => {\n        dispatch(getUser(userId))\n    }, [dispatch, userId])\n\n    const getPosts = (userId) => {\n        !!user && axios.get(`${apiUrl}/users/${userId}/posts`).then((resp) => {\n            const postsData = resp.data;\n            setUserPosts(postsData);\n        })\n        setIsVisible(!isVisible)\n    }\n    return (\n        <Container>\n            {user && (\n                <ListGroup className='my-2'>\n                    <Nav className=\"mr-auto\">\n                        <Nav.Link href='/posts' style={{ width: '20%' }} variant='secondary'>Назад</Nav.Link>\n                    </Nav>\n                    <ListGroupItem variant='primary'>Имя: {user.name}</ListGroupItem>\n                    <ListGroupItem>Ник: {user.username}</ListGroupItem>\n                    <ListGroupItem>email: {user.email}</ListGroupItem>\n                    <ListGroupItem>Адрес: г. {user.address.city}, ул. {user.address.street}, кв.{user.address.suite}, индекс: {user.address.zipcode}</ListGroupItem>\n                    <ListGroupItem>Номер телефона: {user.phone}</ListGroupItem>\n                    <ListGroupItem>Вебсайт: {user.website}</ListGroupItem>\n                    <ListGroupItem>Компания: {user.company.name}</ListGroupItem>\n                    <Button onClick={() => getPosts(userId)} className='mt-2' style={{ width: '40%' }} variant='primary'>{!isVisible ? 'Все посты пользователя' : 'Скрыть все посты пользователя'}</Button>\n                    {userPosts.length > 0 && isVisible && userPosts.map(post => (\n                        <Post key={post.id} post={post} />\n                    ))}\n                </ListGroup>\n            )}\n        </Container>\n    );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}