{"ast":null,"code":"import { legacy_createStore as createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from '@redux-devtools/extension';\nimport { rootReducer } from './index';\nimport thunk from 'redux-thunk';\n// import createSagaMiddleware from 'redux-saga'\n// import { getItemsWatcher } from './sagas';\n\nconst composeEnhancers = composeWithDevTools({});\nconst enhancer = composeEnhancers(applyMiddleware(thunk));\nexport const store = createStore(rootReducer, enhancer);\n\n// const sagaMiddleware = createSagaMiddleware();\n\n// const enhancer = composeEnhancers(applyMiddleware(sagaMiddleware)); // enhancer, если нам нужны усилители\n\n// export const store = createStore(rootReducer, enhancer);","map":{"version":3,"names":["legacy_createStore","createStore","applyMiddleware","composeWithDevTools","rootReducer","thunk","composeEnhancers","enhancer","store"],"sources":["/Users/pavloveone/Desktop/projects/posts/src/services/store.js"],"sourcesContent":["import { legacy_createStore as createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from '@redux-devtools/extension'; \nimport { rootReducer } from './index';\nimport thunk from 'redux-thunk';\n// import createSagaMiddleware from 'redux-saga'\n// import { getItemsWatcher } from './sagas';\n\nconst composeEnhancers = composeWithDevTools({});\n\nconst enhancer = composeEnhancers(applyMiddleware(thunk));\n\nexport const store = createStore(rootReducer, enhancer);\n\n// const sagaMiddleware = createSagaMiddleware();\n\n// const enhancer = composeEnhancers(applyMiddleware(sagaMiddleware)); // enhancer, если нам нужны усилители\n\n// export const store = createStore(rootReducer, enhancer);"],"mappings":"AAAA,SAASA,kBAAkB,IAAIC,WAAW,EAAEC,eAAe,QAAQ,OAAO;AAC1E,SAASC,mBAAmB,QAAQ,2BAA2B;AAC/D,SAASC,WAAW,QAAQ,SAAS;AACrC,OAAOC,KAAK,MAAM,aAAa;AAC/B;AACA;;AAEA,MAAMC,gBAAgB,GAAGH,mBAAmB,CAAC,CAAC,CAAC,CAAC;AAEhD,MAAMI,QAAQ,GAAGD,gBAAgB,CAACJ,eAAe,CAACG,KAAK,CAAC,CAAC;AAEzD,OAAO,MAAMG,KAAK,GAAGP,WAAW,CAACG,WAAW,EAAEG,QAAQ,CAAC;;AAEvD;;AAEA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}