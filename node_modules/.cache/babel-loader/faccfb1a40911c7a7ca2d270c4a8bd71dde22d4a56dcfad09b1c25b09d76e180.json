{"ast":null,"code":"// import { createReducer } from '@reduxjs/toolkit';\n// import { GET_FILTER_REQUEST, GET_FILTER_SUCCESS, GET_FILTER_FAILED } from '../actions/filter';\n\n// const initialState = {\n//     isLoading: false,\n//     hasError: false,\n//     filter: [],\n//     erorrMessage: ''\n// }\n\n// export const filterReducer = createReducer(initialState, builder => {\n//     builder\n//         .addCase(GET_FILTER_REQUEST, state => {\n//             state.isLoading = true;\n//         })\n//         .addCase(GET_FILTER_SUCCESS, (state, action) => {\n//             state.isLoading = false;\n//             state.filter = action.payload;\n//         })\n//         .addCase(GET_FILTER_FAILED, (state, action) => {\n//             state.isLoading = false;\n//             state.hasError = true;\n//             state.erorrMessage = action.payload;\n//         })\n// })","map":{"version":3,"names":[],"sources":["/Users/pavloveone/Desktop/projects/posts/src/services/reducers/filter.js"],"sourcesContent":["// import { createReducer } from '@reduxjs/toolkit';\n// import { GET_FILTER_REQUEST, GET_FILTER_SUCCESS, GET_FILTER_FAILED } from '../actions/filter';\n\n// const initialState = {\n//     isLoading: false,\n//     hasError: false,\n//     filter: [],\n//     erorrMessage: ''\n// }\n\n// export const filterReducer = createReducer(initialState, builder => {\n//     builder\n//         .addCase(GET_FILTER_REQUEST, state => {\n//             state.isLoading = true;\n//         })\n//         .addCase(GET_FILTER_SUCCESS, (state, action) => {\n//             state.isLoading = false;\n//             state.filter = action.payload;\n//         })\n//         .addCase(GET_FILTER_FAILED, (state, action) => {\n//             state.isLoading = false;\n//             state.hasError = true;\n//             state.erorrMessage = action.payload;\n//         })\n// })"],"mappings":"AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}