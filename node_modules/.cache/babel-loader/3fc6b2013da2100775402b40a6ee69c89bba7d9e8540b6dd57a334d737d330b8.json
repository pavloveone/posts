{"ast":null,"code":"import { GET_USERS_POSTS_REQUEST, GET_USERS_POSTS_SUCCESS, GET_USERS_POSTS_FAILED } from '../actions/users-posts';\nconst initialState = {\n  isLoading: false,\n  hasError: false,\n  usersPosts: []\n};\nexport const usersPostsReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case GET_USERS_POSTS_REQUEST:\n      return {\n        ...state,\n        isLoading: true\n      };\n    case GET_USERS_POSTS_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        usersPosts: action.payload\n      };\n    case GET_USERS_POSTS_FAILED:\n      return {\n        ...state,\n        hasError: true,\n        usersPosts: []\n      };\n    default:\n      return state;\n  }\n};","map":{"version":3,"names":["GET_USERS_POSTS_REQUEST","GET_USERS_POSTS_SUCCESS","GET_USERS_POSTS_FAILED","initialState","isLoading","hasError","usersPosts","usersPostsReducer","state","arguments","length","undefined","action","type","payload"],"sources":["/Users/pavloveone/Desktop/projects/posts/src/services/reducers/users-posts.js"],"sourcesContent":["import { GET_USERS_POSTS_REQUEST, GET_USERS_POSTS_SUCCESS, GET_USERS_POSTS_FAILED } from '../actions/users-posts';\n\nconst initialState = {\n    isLoading: false,\n    hasError: false,\n    usersPosts: []\n}\n\nexport const usersPostsReducer = (state = initialState, action) => {\n    switch(action.type) {\n        case GET_USERS_POSTS_REQUEST:\n         return {\n                ...state,\n                isLoading: true,\n         }\n        case GET_USERS_POSTS_SUCCESS:\n            return {\n                ...state,\n                isLoading: false,\n                usersPosts: action.payload\n            }\n        case GET_USERS_POSTS_FAILED:\n            return {\n                ...state,\n                hasError: true,\n                usersPosts: []\n            }\n        default: return state\n    }\n}"],"mappings":"AAAA,SAASA,uBAAuB,EAAEC,uBAAuB,EAAEC,sBAAsB,QAAQ,wBAAwB;AAEjH,MAAMC,YAAY,GAAG;EACjBC,SAAS,EAAE,KAAK;EAChBC,QAAQ,EAAE,KAAK;EACfC,UAAU,EAAE;AAChB,CAAC;AAED,OAAO,MAAMC,iBAAiB,GAAG,SAAAA,CAAA,EAAkC;EAAA,IAAjCC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGN,YAAY;EAAA,IAAES,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAC1D,QAAOC,MAAM,CAACC,IAAI;IACd,KAAKb,uBAAuB;MAC3B,OAAO;QACA,GAAGQ,KAAK;QACRJ,SAAS,EAAE;MAClB,CAAC;IACF,KAAKH,uBAAuB;MACxB,OAAO;QACH,GAAGO,KAAK;QACRJ,SAAS,EAAE,KAAK;QAChBE,UAAU,EAAEM,MAAM,CAACE;MACvB,CAAC;IACL,KAAKZ,sBAAsB;MACvB,OAAO;QACH,GAAGM,KAAK;QACRH,QAAQ,EAAE,IAAI;QACdC,UAAU,EAAE;MAChB,CAAC;IACL;MAAS,OAAOE,KAAK;EACzB;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}