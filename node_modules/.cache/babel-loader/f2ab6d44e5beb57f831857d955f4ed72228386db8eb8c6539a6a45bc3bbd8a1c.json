{"ast":null,"code":"import { checkReponse, apiUrl } from \"../../utils/variables\";\nimport { call, put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\nexport const GET_USERS_POSTS_REQUEST = 'GET_USERS_POSTS_REQUEST';\nexport const GET_USERS_POSTS_SUCCESS = 'GET_USERS_POSTS_SUCCESS';\nexport const GET_USERS_POSTS_FAILED = 'GET_USERS_POSTS_FAILED';\nexport const getUsersPosts = userId => dispatch => {\n  dispatch({\n    type: GET_USERS_POSTS_REQUEST\n  });\n  axios.get(`${apiUrl}/users/${userId}/posts`).then(res => checkReponse(res)).then(res => dispatch({\n    type: GET_USERS_POSTS_SUCCESS,\n    payload: res\n  })).catch(error => {\n    console.log(error);\n    dispatch({\n      type: GET_USERS_POSTS_FAILED,\n      payload: error\n    });\n  });\n};\nfunction* getUserPosts(action) {\n  try {\n    const response = yield call(axios.get, `${apiUrl}/users/${action.payload}/posts`);\n    // Call the checkResponse function here if needed\n    yield put({\n      type: GET_USERS_POSTS_SUCCESS,\n      payload: response.data\n    });\n  } catch (error) {\n    console.log(error);\n    yield put({\n      type: GET_USERS_POSTS_FAILED,\n      payload: error\n    });\n  }\n}\nexport function* watchGetUsersPosts() {\n  yield takeLatest(GET_USERS_POSTS_REQUEST, getUserPosts);\n}","map":{"version":3,"names":["checkReponse","apiUrl","call","put","takeLatest","axios","GET_USERS_POSTS_REQUEST","GET_USERS_POSTS_SUCCESS","GET_USERS_POSTS_FAILED","getUsersPosts","userId","dispatch","type","get","then","res","payload","catch","error","console","log","getUserPosts","action","response","data","watchGetUsersPosts"],"sources":["/Users/pavloveone/Desktop/projects/posts/src/services/actions/users-posts.js"],"sourcesContent":["import { checkReponse, apiUrl } from \"../../utils/variables\";\nimport { call, put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\nexport const GET_USERS_POSTS_REQUEST = 'GET_USERS_POSTS_REQUEST';\nexport const GET_USERS_POSTS_SUCCESS = 'GET_USERS_POSTS_SUCCESS';\nexport const GET_USERS_POSTS_FAILED = 'GET_USERS_POSTS_FAILED'\n\nexport const getUsersPosts = (userId) => dispatch => {\n    dispatch({ type: GET_USERS_POSTS_REQUEST });\n    axios.get(`${apiUrl}/users/${userId}/posts`)\n    .then(res => checkReponse(res))\n    .then(res => \n        dispatch({\n            type: GET_USERS_POSTS_SUCCESS,\n            payload: res\n        }))\n    .catch(error => {\n        console.log(error)\n        dispatch({\n            type: GET_USERS_POSTS_FAILED,\n            payload: error\n        })\n    });\n}\n\nfunction* getUserPosts(action) {\n    try {\n      const response = yield call(axios.get, `${apiUrl}/users/${action.payload}/posts`);\n      // Call the checkResponse function here if needed\n      yield put({\n        type: GET_USERS_POSTS_SUCCESS,\n        payload: response.data\n      });\n    } catch (error) {\n      console.log(error);\n      yield put({\n        type: GET_USERS_POSTS_FAILED,\n        payload: error\n      });\n    }\n  }\n  \nexport  function* watchGetUsersPosts() {\n    yield takeLatest(GET_USERS_POSTS_REQUEST, getUserPosts);\n}"],"mappings":"AAAA,SAASA,YAAY,EAAEC,MAAM,QAAQ,uBAAuB;AAC5D,SAASC,IAAI,EAAEC,GAAG,EAAEC,UAAU,QAAQ,oBAAoB;AAC1D,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,uBAAuB,GAAG,yBAAyB;AAChE,OAAO,MAAMC,uBAAuB,GAAG,yBAAyB;AAChE,OAAO,MAAMC,sBAAsB,GAAG,wBAAwB;AAE9D,OAAO,MAAMC,aAAa,GAAIC,MAAM,IAAKC,QAAQ,IAAI;EACjDA,QAAQ,CAAC;IAAEC,IAAI,EAAEN;EAAwB,CAAC,CAAC;EAC3CD,KAAK,CAACQ,GAAG,CAAE,GAAEZ,MAAO,UAASS,MAAO,QAAO,CAAC,CAC3CI,IAAI,CAACC,GAAG,IAAIf,YAAY,CAACe,GAAG,CAAC,CAAC,CAC9BD,IAAI,CAACC,GAAG,IACLJ,QAAQ,CAAC;IACLC,IAAI,EAAEL,uBAAuB;IAC7BS,OAAO,EAAED;EACb,CAAC,CAAC,CAAC,CACNE,KAAK,CAACC,KAAK,IAAI;IACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IAClBP,QAAQ,CAAC;MACLC,IAAI,EAAEJ,sBAAsB;MAC5BQ,OAAO,EAAEE;IACb,CAAC,CAAC;EACN,CAAC,CAAC;AACN,CAAC;AAED,UAAUG,YAAYA,CAACC,MAAM,EAAE;EAC3B,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMrB,IAAI,CAACG,KAAK,CAACQ,GAAG,EAAG,GAAEZ,MAAO,UAASqB,MAAM,CAACN,OAAQ,QAAO,CAAC;IACjF;IACA,MAAMb,GAAG,CAAC;MACRS,IAAI,EAAEL,uBAAuB;MAC7BS,OAAO,EAAEO,QAAQ,CAACC;IACpB,CAAC,CAAC;EACJ,CAAC,CAAC,OAAON,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IAClB,MAAMf,GAAG,CAAC;MACRS,IAAI,EAAEJ,sBAAsB;MAC5BQ,OAAO,EAAEE;IACX,CAAC,CAAC;EACJ;AACF;AAEF,OAAQ,UAAUO,kBAAkBA,CAAA,EAAG;EACnC,MAAMrB,UAAU,CAACE,uBAAuB,EAAEe,YAAY,CAAC;AAC3D"},"metadata":{},"sourceType":"module","externalDependencies":[]}