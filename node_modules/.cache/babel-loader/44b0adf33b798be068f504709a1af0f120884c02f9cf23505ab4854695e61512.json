{"ast":null,"code":"import { checkReponse, apiUrl } from \"../../utils/variables\";\nimport { call, put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\nexport const GET_COMMENTS_REQUEST = 'GET_COMMENTS_REQUEST';\nexport const GET_COMMENTS_SUCCESS = 'GET_COMMENTS_SUCCESS';\nexport const GET_COMMENTS_FAILED = 'GET_COMMENTS_FAILED';\nexport const getComments = id => dispatch => {\n  dispatch({\n    type: GET_COMMENTS_REQUEST\n  });\n  axios.get(`${apiUrl}/comments?postId=${id}`).then(res => checkReponse(res)).then(res => dispatch({\n    type: GET_COMMENTS_SUCCESS,\n    payload: res.data\n  })).catch(error => {\n    console.log(error);\n    dispatch({\n      type: GET_COMMENTS_FAILED,\n      payload: error\n    });\n  });\n};\nfunction* getCommentsSaga(action) {\n  try {\n    const response = yield call(axios.get, `${apiUrl}/comments?postId=${action.id}`);\n    yield put({\n      type: GET_COMMENTS_SUCCESS,\n      payload: response.data\n    });\n  } catch (error) {\n    yield put({\n      type: GET_COMMENTS_FAILED,\n      payload: error\n    });\n  }\n}\nexport function* watchGetComments() {\n  yield takeLatest(GET_COMMENTS_REQUEST, getCommentsSaga);\n}","map":{"version":3,"names":["checkReponse","apiUrl","call","put","takeLatest","axios","GET_COMMENTS_REQUEST","GET_COMMENTS_SUCCESS","GET_COMMENTS_FAILED","getComments","id","dispatch","type","get","then","res","payload","data","catch","error","console","log","getCommentsSaga","action","response","watchGetComments"],"sources":["/Users/pavloveone/Desktop/projects/posts/src/services/actions/comments.js"],"sourcesContent":["import { checkReponse, apiUrl } from \"../../utils/variables\";\nimport { call, put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\nexport const GET_COMMENTS_REQUEST = 'GET_COMMENTS_REQUEST';\nexport const GET_COMMENTS_SUCCESS = 'GET_COMMENTS_SUCCESS';\nexport const GET_COMMENTS_FAILED = 'GET_COMMENTS_FAILED'\n\nexport const getComments = (id) => dispatch => {\n    dispatch({ type: GET_COMMENTS_REQUEST });\n    axios.get(`${apiUrl}/comments?postId=${id}`)\n    .then(res => checkReponse(res))\n    .then(res => \n        dispatch({\n            type: GET_COMMENTS_SUCCESS,\n            payload: res.data\n        }))\n    .catch(error => {\n        console.log(error)\n        dispatch({\n            type: GET_COMMENTS_FAILED,\n            payload: error\n        })\n    });\n}\nfunction* getCommentsSaga(action) {\n    try {\n      const response = yield call(axios.get, `${apiUrl}/comments?postId=${action.id}`);\n      yield put({\n        type: GET_COMMENTS_SUCCESS,\n        payload: response.data\n      });\n    } catch (error) {\n      yield put({\n        type: GET_COMMENTS_FAILED,\n        payload: error\n      });\n    }\n  }\n  \nexport  function* watchGetComments() {\n    yield takeLatest(GET_COMMENTS_REQUEST, getCommentsSaga);\n  }"],"mappings":"AAAA,SAASA,YAAY,EAAEC,MAAM,QAAQ,uBAAuB;AAC5D,SAASC,IAAI,EAAEC,GAAG,EAAEC,UAAU,QAAQ,oBAAoB;AAC1D,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,oBAAoB,GAAG,sBAAsB;AAC1D,OAAO,MAAMC,oBAAoB,GAAG,sBAAsB;AAC1D,OAAO,MAAMC,mBAAmB,GAAG,qBAAqB;AAExD,OAAO,MAAMC,WAAW,GAAIC,EAAE,IAAKC,QAAQ,IAAI;EAC3CA,QAAQ,CAAC;IAAEC,IAAI,EAAEN;EAAqB,CAAC,CAAC;EACxCD,KAAK,CAACQ,GAAG,CAAE,GAAEZ,MAAO,oBAAmBS,EAAG,EAAC,CAAC,CAC3CI,IAAI,CAACC,GAAG,IAAIf,YAAY,CAACe,GAAG,CAAC,CAAC,CAC9BD,IAAI,CAACC,GAAG,IACLJ,QAAQ,CAAC;IACLC,IAAI,EAAEL,oBAAoB;IAC1BS,OAAO,EAAED,GAAG,CAACE;EACjB,CAAC,CAAC,CAAC,CACNC,KAAK,CAACC,KAAK,IAAI;IACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IAClBR,QAAQ,CAAC;MACLC,IAAI,EAAEJ,mBAAmB;MACzBQ,OAAO,EAAEG;IACb,CAAC,CAAC;EACN,CAAC,CAAC;AACN,CAAC;AACD,UAAUG,eAAeA,CAACC,MAAM,EAAE;EAC9B,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMtB,IAAI,CAACG,KAAK,CAACQ,GAAG,EAAG,GAAEZ,MAAO,oBAAmBsB,MAAM,CAACb,EAAG,EAAC,CAAC;IAChF,MAAMP,GAAG,CAAC;MACRS,IAAI,EAAEL,oBAAoB;MAC1BS,OAAO,EAAEQ,QAAQ,CAACP;IACpB,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOE,KAAK,EAAE;IACd,MAAMhB,GAAG,CAAC;MACRS,IAAI,EAAEJ,mBAAmB;MACzBQ,OAAO,EAAEG;IACX,CAAC,CAAC;EACJ;AACF;AAEF,OAAQ,UAAUM,gBAAgBA,CAAA,EAAG;EACjC,MAAMrB,UAAU,CAACE,oBAAoB,EAAEgB,eAAe,CAAC;AACzD"},"metadata":{},"sourceType":"module","externalDependencies":[]}