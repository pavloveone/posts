{"ast":null,"code":"import { checkReponse, apiUrl } from \"../../utils/variables\";\nimport { call, put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\nexport const GET_USER_REQUEST = 'GET_USER_REQUEST';\nexport const GET_USER_SUCCESS = 'GET_USER_SUCCESS';\nexport const GET_USER_FAILED = 'GET_USER_FAILED';\nexport const getUser = userId => dispatch => {\n  dispatch({\n    type: GET_USER_REQUEST\n  });\n  axios.get(`${apiUrl}/users/${userId}`).then(res => checkReponse(res)).then(res => dispatch({\n    type: GET_USER_SUCCESS,\n    payload: res.data\n  })).catch(error => {\n    console.log(error);\n    dispatch({\n      type: GET_USER_FAILED,\n      payload: error\n    });\n  });\n};\nfunction* getUsers(action) {\n  try {\n    const response = yield call(axios.get, `${apiUrl}/users/${action.payload}`);\n    // Call the checkResponse function here if needed\n    yield put({\n      type: GET_USER_SUCCESS,\n      payload: response.data\n    });\n  } catch (error) {\n    console.log(error);\n    yield put({\n      type: GET_USER_FAILED,\n      payload: error\n    });\n  }\n}\nexport function* watchGetUser() {\n  yield takeLatest(GET_USER_REQUEST, getUsers);\n}","map":{"version":3,"names":["checkReponse","apiUrl","call","put","takeLatest","axios","GET_USER_REQUEST","GET_USER_SUCCESS","GET_USER_FAILED","getUser","userId","dispatch","type","get","then","res","payload","data","catch","error","console","log","getUsers","action","response","watchGetUser"],"sources":["/Users/pavloveone/Desktop/projects/posts/src/services/actions/user.js"],"sourcesContent":["import { checkReponse, apiUrl } from \"../../utils/variables\";\nimport { call, put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\nexport const GET_USER_REQUEST = 'GET_USER_REQUEST';\nexport const GET_USER_SUCCESS = 'GET_USER_SUCCESS';\nexport const GET_USER_FAILED = 'GET_USER_FAILED'\n\nexport const getUser = (userId) => dispatch => {\n    dispatch({ type: GET_USER_REQUEST });\n    axios.get(`${apiUrl}/users/${userId}`)\n    .then(res => checkReponse(res))\n    .then(res => \n        dispatch({\n            type: GET_USER_SUCCESS,\n            payload: res.data\n        }))\n    .catch(error => {\n        console.log(error)\n        dispatch({\n            type: GET_USER_FAILED,\n            payload: error\n        })\n    });\n}\n\nfunction* getUsers(action) {\n    try {\n      const response = yield call(axios.get, `${apiUrl}/users/${action.payload}`);\n      // Call the checkResponse function here if needed\n      yield put({\n        type: GET_USER_SUCCESS,\n        payload: response.data\n      });\n    } catch (error) {\n      console.log(error);\n      yield put({\n        type: GET_USER_FAILED,\n        payload: error\n      });\n    }\n}\n  \nexport function* watchGetUser() {\n    yield takeLatest(GET_USER_REQUEST, getUsers);\n}"],"mappings":"AAAA,SAASA,YAAY,EAAEC,MAAM,QAAQ,uBAAuB;AAC5D,SAASC,IAAI,EAAEC,GAAG,EAAEC,UAAU,QAAQ,oBAAoB;AAC1D,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,gBAAgB,GAAG,kBAAkB;AAClD,OAAO,MAAMC,gBAAgB,GAAG,kBAAkB;AAClD,OAAO,MAAMC,eAAe,GAAG,iBAAiB;AAEhD,OAAO,MAAMC,OAAO,GAAIC,MAAM,IAAKC,QAAQ,IAAI;EAC3CA,QAAQ,CAAC;IAAEC,IAAI,EAAEN;EAAiB,CAAC,CAAC;EACpCD,KAAK,CAACQ,GAAG,CAAE,GAAEZ,MAAO,UAASS,MAAO,EAAC,CAAC,CACrCI,IAAI,CAACC,GAAG,IAAIf,YAAY,CAACe,GAAG,CAAC,CAAC,CAC9BD,IAAI,CAACC,GAAG,IACLJ,QAAQ,CAAC;IACLC,IAAI,EAAEL,gBAAgB;IACtBS,OAAO,EAAED,GAAG,CAACE;EACjB,CAAC,CAAC,CAAC,CACNC,KAAK,CAACC,KAAK,IAAI;IACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IAClBR,QAAQ,CAAC;MACLC,IAAI,EAAEJ,eAAe;MACrBQ,OAAO,EAAEG;IACb,CAAC,CAAC;EACN,CAAC,CAAC;AACN,CAAC;AAED,UAAUG,QAAQA,CAACC,MAAM,EAAE;EACvB,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMtB,IAAI,CAACG,KAAK,CAACQ,GAAG,EAAG,GAAEZ,MAAO,UAASsB,MAAM,CAACP,OAAQ,EAAC,CAAC;IAC3E;IACA,MAAMb,GAAG,CAAC;MACRS,IAAI,EAAEL,gBAAgB;MACtBS,OAAO,EAAEQ,QAAQ,CAACP;IACpB,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IAClB,MAAMhB,GAAG,CAAC;MACRS,IAAI,EAAEJ,eAAe;MACrBQ,OAAO,EAAEG;IACX,CAAC,CAAC;EACJ;AACJ;AAEA,OAAO,UAAUM,YAAYA,CAAA,EAAG;EAC5B,MAAMrB,UAAU,CAACE,gBAAgB,EAAEgB,QAAQ,CAAC;AAChD"},"metadata":{},"sourceType":"module","externalDependencies":[]}