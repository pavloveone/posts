{"ast":null,"code":"import { checkReponse, apiUrl } from \"../../utils/variables\";\nimport { call, put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\nexport const GET_POSTS_REQUEST = 'GET_POSTS_REQUEST';\nexport const GET_POSTS_SUCCESS = 'GET_POSTS_SUCCESS';\nexport const GET_POSTS_FAILED = 'GET_POSTS_FAILED';\nexport const getPosts = () => dispatch => {\n  dispatch({\n    type: GET_POSTS_REQUEST\n  });\n  axios.get(`${apiUrl}/posts`).then(res => checkReponse(res)).then(res => dispatch({\n    type: GET_POSTS_SUCCESS,\n    payload: res.data\n  })).catch(error => {\n    console.log(error);\n    dispatch({\n      type: GET_POSTS_FAILED,\n      payload: error\n    });\n  });\n};\nfunction* fetchPosts() {\n  try {\n    const response = yield call(axios.get, `${apiUrl}/posts`);\n    // Call the checkResponse function here if needed\n    yield put({\n      type: GET_POSTS_SUCCESS,\n      payload: response.data\n    });\n  } catch (error) {\n    console.log(error);\n    yield put({\n      type: GET_POSTS_FAILED,\n      payload: error\n    });\n  }\n}\nexport function* watchFetchPosts() {\n  yield takeLatest(GET_POSTS_REQUEST, fetchPosts);\n}","map":{"version":3,"names":["checkReponse","apiUrl","call","put","takeLatest","axios","GET_POSTS_REQUEST","GET_POSTS_SUCCESS","GET_POSTS_FAILED","getPosts","dispatch","type","get","then","res","payload","data","catch","error","console","log","fetchPosts","response","watchFetchPosts"],"sources":["/Users/pavloveone/Desktop/projects/posts/src/services/actions/posts.js"],"sourcesContent":["import { checkReponse, apiUrl } from \"../../utils/variables\";\nimport { call, put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\nexport const GET_POSTS_REQUEST = 'GET_POSTS_REQUEST';\nexport const GET_POSTS_SUCCESS = 'GET_POSTS_SUCCESS';\nexport const GET_POSTS_FAILED = 'GET_POSTS_FAILED'\n\nexport const getPosts = () => dispatch => {\n    dispatch({ type: GET_POSTS_REQUEST });\n    axios.get(`${apiUrl}/posts`)\n    .then(res => checkReponse(res))\n    .then(res => \n        dispatch({\n            type: GET_POSTS_SUCCESS,\n            payload: res.data\n        }))\n    .catch(error => {\n        console.log(error)\n        dispatch({\n            type: GET_POSTS_FAILED,\n            payload: error\n        })\n    });\n}\n\nfunction* fetchPosts() {\n    try {\n      const response = yield call(axios.get, `${apiUrl}/posts`);\n      // Call the checkResponse function here if needed\n      yield put({\n        type: GET_POSTS_SUCCESS,\n        payload: response.data\n      });\n    } catch (error) {\n      console.log(error);\n      yield put({\n        type: GET_POSTS_FAILED,\n        payload: error\n      });\n    }\n}\n  \nexport  function* watchFetchPosts() {\n    yield takeLatest(GET_POSTS_REQUEST, fetchPosts);\n}"],"mappings":"AAAA,SAASA,YAAY,EAAEC,MAAM,QAAQ,uBAAuB;AAC5D,SAASC,IAAI,EAAEC,GAAG,EAAEC,UAAU,QAAQ,oBAAoB;AAC1D,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,iBAAiB,GAAG,mBAAmB;AACpD,OAAO,MAAMC,iBAAiB,GAAG,mBAAmB;AACpD,OAAO,MAAMC,gBAAgB,GAAG,kBAAkB;AAElD,OAAO,MAAMC,QAAQ,GAAGA,CAAA,KAAMC,QAAQ,IAAI;EACtCA,QAAQ,CAAC;IAAEC,IAAI,EAAEL;EAAkB,CAAC,CAAC;EACrCD,KAAK,CAACO,GAAG,CAAE,GAAEX,MAAO,QAAO,CAAC,CAC3BY,IAAI,CAACC,GAAG,IAAId,YAAY,CAACc,GAAG,CAAC,CAAC,CAC9BD,IAAI,CAACC,GAAG,IACLJ,QAAQ,CAAC;IACLC,IAAI,EAAEJ,iBAAiB;IACvBQ,OAAO,EAAED,GAAG,CAACE;EACjB,CAAC,CAAC,CAAC,CACNC,KAAK,CAACC,KAAK,IAAI;IACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IAClBR,QAAQ,CAAC;MACLC,IAAI,EAAEH,gBAAgB;MACtBO,OAAO,EAAEG;IACb,CAAC,CAAC;EACN,CAAC,CAAC;AACN,CAAC;AAED,UAAUG,UAAUA,CAAA,EAAG;EACnB,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMpB,IAAI,CAACG,KAAK,CAACO,GAAG,EAAG,GAAEX,MAAO,QAAO,CAAC;IACzD;IACA,MAAME,GAAG,CAAC;MACRQ,IAAI,EAAEJ,iBAAiB;MACvBQ,OAAO,EAAEO,QAAQ,CAACN;IACpB,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IAClB,MAAMf,GAAG,CAAC;MACRQ,IAAI,EAAEH,gBAAgB;MACtBO,OAAO,EAAEG;IACX,CAAC,CAAC;EACJ;AACJ;AAEA,OAAQ,UAAUK,eAAeA,CAAA,EAAG;EAChC,MAAMnB,UAAU,CAACE,iBAAiB,EAAEe,UAAU,CAAC;AACnD"},"metadata":{},"sourceType":"module","externalDependencies":[]}